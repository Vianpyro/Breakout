name: Release Build

on:
  workflow_dispatch:
  workflow_call: {}

permissions:
  contents: read

jobs:
  get-name:
    name: Get binary name
    uses: ./.github/workflows/normalize-repository-name.yml
    secrets: inherit

  build:
    name: Build Game Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libudev-dev libwayland-dev libasound2-dev

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build
        run: cargo build --release

      - name: Copy binary (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p dist
          if [ -f target/release/${{ steps.get-name.outputs.name }} ]; then
            cp target/release/${{ steps.get-name.outputs.name }} dist/
          elif [ -f target/release/${{ steps.get-name.outputs.name | capitalize }} ]; then
            cp target/release/${{ steps.get-name.outputs.name | capitalize }} dist/
          fi
        shell: bash

      - name: Copy binary (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir dist
          copy target\release\${{ steps.get-name.outputs.name | capitalize }}.exe dist\
        shell: pwsh

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: Pong-${{ matrix.os }}
          path: dist/
